/**
 * Design a Distributed Task Scheduler (Like Cron Jobs)
ðŸ’¡ Problem Statement:

Design a system that schedules and executes tasks at scale.
ðŸ”¹ Key Components:

Job Scheduler - Queues tasks.
Worker Nodes - Execute scheduled jobs.
Failure Handling - Reassigns failed jobs.
ðŸ”¹ Tech Stack:

Backend: Node.js, Celery (Task queue)
Database: PostgreSQL (Job storage), Redis (Caching)
Queue System: RabbitMQ/Kafka
Scaling Considerations
âœ” Worker Pool Scaling to handle load.
âœ” Job Prioritization (High vs Low priority jobs).
âœ” Leader Election (Zookeeper) for fault tolerance.


 */